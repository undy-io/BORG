{{- /*
     authKeySecret:
       name: my-auth-secret
       key:  AUTH_KEY                 # the map key inside the Secret (required)
       value: ""                      # optional â€“ leave empty to auto-generate
*/ -}}

{{- $name      := .Values.authKeySecret.name | default (printf "%s-auth" .Release.Name) }}
{{- $key       := .Values.authKeySecret.key  | required "authKeySecret.key must be set" }}
{{- $keyValue := .Values.authKeySecret.value }}
{{- $existing  := lookup "v1" "Secret" .Release.Namespace $name }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  {{- /* re-use existing value on upgrade           */}}
  {{- if and $existing (index $existing.data $key) }}
  {{ $key }}: {{ index $existing.data $key }}
  {{- /* use operator-supplied value (encode to b64) */}}
  {{- else if $keyValue }}
  {{ $key }}: {{ $keyValue | b64enc }}
  {{- /* else generate 32 random bytes, b64-encode   */}}
  {{- else }}
  {{ $key }}: {{ randBytes 32 | b64enc }}
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.apikeySecrets.name }}
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  {{- range .Values.config.instances }}
  {{- if .apikeyEnv }}
  {{ .apikeyEnv }}: {{ .apikey | default "EMPTY" }}
  {{- end }}
  {{- end }}